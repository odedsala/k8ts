apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue
  labels:
    app: ui
    tier: frontend
spec:
  replicas: 2
  strategy:
   type: RollingUpdate
   rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 25%  
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata: 
     name: app1 
     labels:
       tier: frontend
    spec:
     containers:
     - name: app1
       image: supergiantkir/animals:bear
       ports: 
       - containerPort: 80
       volumeMounts:
       - mountPath: /storage
         name: app-storage
     volumes:
     - name: app-storage
       hostPath:
          path: /tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: green
  labels:
    app: ui
    tier: frontend
spec:
  replicas: 1
  strategy:
   type: RollingUpdate
   rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 25%  
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata: 
     name: app1 
     labels:
       tier: frontend
    spec:
     containers:
     - name: app1
       image: supergiantkir/animals:moose
       ports: 
       - containerPort: 80
       volumeMounts:
       - mountPath: /storage
         name: app-storage
     volumes:
     - name: app-storage
       hostPath:
          path: /tmp
----
kind: Service 
apiVersion: v1     
metadata:
  name: my-service
spec:
  selector:
    app: ui
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort:80
  type: LoadBalancer
